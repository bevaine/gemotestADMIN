<?php

namespace common\models;

use Yii;
use yii\web\UploadedFile;
use yii\log\Logger;
use yii\base\Exception;
use yii\helpers\FileHelper;

/**
 * This is the model class for table "register_objects".
 *
 * @property int $id
 * @property int $created_at
 * @property string $street
 * @property string $flat
 * @property int $repair
 * @property int $floor
 * @property double $area_all
 * @property double $area_kitchen
 * @property int $bathroom
 * @property int $lift_pass
 * @property int $lift_cargo
 * @property string $other_inf
 * @property string $json_picture
 */

class RegisterObjects extends \yii\db\ActiveRecord
{
    /**
     *
     */
    const SCENARIO_OBJECT_ADD = 'object_add';

    /**
     * @var UploadedFile[]
     */
    public $imageFiles;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'register_objects';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['created_at', 'repair', 'floor', 'bathroom', 'lift_pass', 'lift_cargo'], 'default', 'value' => null],
            [['created_at', 'repair', 'floor', 'bathroom', 'lift_pass', 'lift_cargo'], 'integer'],
            [['area_all', 'area_kitchen'], 'number'],
            [['other_inf', 'json_picture'], 'string'],
            [['street', 'flat'], 'string', 'max' => 255],
            [['created_at', 'area_all', 'street', 'flat', 'floor'], 'required', 'on' => self::SCENARIO_OBJECT_ADD],
            [['imageFiles'], 'file', 'skipOnEmpty' => true, 'extensions' => 'png, jpg', 'maxFiles' => 4],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'created_at' => 'Добавлено',
            'street' => 'Адрес',
            'flat' => 'Кол-во комнат',
            'repair' => 'Ремонт',
            'floor' => 'Этаж',
            'area_all' => 'Общая площадь',
            'area_kitchen' => 'Площадь кухни',
            'bathroom' => 'Санузел',
            'lift_pass' => 'Пассажир. лифт',
            'lift_cargo' => 'Грузовой лифт',
            'other_inf' => 'Другая инф.',
            'json_picture' => 'Изображения',
        ];
    }

    /**
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        $this->created_at = time();
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @return array
     */
    public function upload()
    {
        if ($this->validate())
        {
            $json_picture_arr = [];
            if (!is_dir(self::getPictObjectsDir())) {
                FileHelper::createDirectory(self::getPictObjectsDir(), 0777);
            }
            foreach ($this->imageFiles as $file) {
                try {
                    $uid = uniqid(time(), true);
                    $fileName = $uid . '.' . $file->extension;
                    if ($file->saveAs(self::getPictObjectsDir() . $fileName)) {
                        $json_picture_arr[] = $fileName;
                    }
                } catch(Exception $ex) {
                    return [
                        'error' => true,
                        'message' => $ex->getMessage()
                    ];
                }
            }
            empty($json_picture_arr) ?: $this->json_picture = json_encode($json_picture_arr);
            return ['error' => false];
        } else {
            return [
                'error' => true,
                'message' => $this->errors
            ];
        }
    }

    /**
     * @return string
     */
    static public function getPictObjectsDir() {
        return implode(DIRECTORY_SEPARATOR, [Yii::getAlias('@backend'), 'web', 'upload', 'objects']). DIRECTORY_SEPARATOR;
    }
}
